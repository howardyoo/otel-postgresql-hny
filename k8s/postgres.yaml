apiVersion: v1
kind: Secret
metadata:
  name: honeycomb-api-key
data:
  HONEYCOMB_API_KEY: <honeycomb api key encoded with base64>
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
data:
  config.yaml: |
    receivers:
      postgresql:
        endpoint: "postgres:5432"
        username: postgres
        password: postgres
        databases: []
        collection_interval: 30s
        tls:
          insecure: true
          insecure_skip_verify: true
        initial_delay: 5s
        query_sample_collection:
          enabled: true
        top_query_collection:
          enabled: true
          top_n_query: 1234
    exporters:
      debug:
        verbosity: detailed
      otlp/honeycomb:
        endpoint: "api.honeycomb.io:443" # US instance
        #endpoint: "api.eu1.honeycomb.io:443" # EU instance
        headers:
          "x-honeycomb-team": ${HONEYCOMB_API_KEY}
          "x-honeycomb-dataset": "database"
    service:
      pipelines:
        metrics:
          receivers: [postgresql]
          exporters: [debug, otlp/honeycomb]
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-init
data:
  init-db.sh: |
    #!/bin/bash
    set -e
    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
    GRANT pg_monitor TO postgres;
    GRANT SELECT ON pg_stat_database to postgres;
    CREATE EXTENSION IF NOT EXISTS pg_stat_statements;
    EOSQL
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:14
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: postgres
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: postgres
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: postgresql-init
          mountPath: /docker-entrypoint-initdb.d
      - name: otel-collector
        image: otel/opentelemetry-collector-contrib:latest
        args: ["--config=/conf/config.yaml"]
        env:
        - name: HONEYCOMB_API_KEY
          valueFrom:
            secretKeyRef:
              name: honeycomb-api-key
              key: HONEYCOMB_API_KEY
        volumeMounts:
        - name: otel-config
          mountPath: /conf
      volumes:
      - name: postgresql-init
        configMap:
          name: postgresql-init
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
      - name: otel-config
        configMap:
          name: otel-collector-config
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
  type: ClusterIP 
